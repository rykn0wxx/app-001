@use "../theme/variables" as variables2;
@use "../theme/mixins" as theme-mixins;
@use "../feature-targeting/functions";
@use "../feature-targeting/mixins" as feature-targeting-mixins;
@use "../animation/variables" as animation-variables;
@use "../typography/mixins" as typography-mixins;
@use "./variables";
@mixin core-styles($query: functions.all()) {
  $feat-structure: functions.create-target($query, structure);
  $feat-animation: functions.create-target($query, animation);

  .mdc-floating-label {
    @include typography-mixins.typography(subtitle1, $exclude-props: (line-height), $query: $query);
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
            left: 0;
            transform-origin: left top;
      line-height: 1.15rem;
      text-align: left;
      text-overflow: ellipsis;
      white-space: nowrap;
      cursor: text;
      overflow: hidden;


      will-change: transform;

    }
    @include feature-targeting-mixins.targets($feat-animation) {
      transition:
        transform variables.$transition-duration animation-variables.$standard-curve-timing-function,
        color variables.$transition-duration animation-variables.$standard-curve-timing-function;
    }
  }
  .mdc-floating-label--float-above {
    @include feature-targeting-mixins.targets($feat-structure) {
      cursor: auto;
    }
  }
  @at-root {
    @include float-position(variables.$position-y, $query: $query);
    @include shake-animation(standard, $query: $query);
  }
  @include shake-keyframes(standard, variables.$position-y, $query: $query);
}
@mixin ink-color($color, $query: functions.all()) {
  $feat-color: functions.create-target($query, color);
  @include feature-targeting-mixins.targets($feat-color) {
    @include theme-mixins.prop(color, $color);
  }
}
@mixin fill-color($color, $query: functions.all()) {
  $feat-color: functions.create-target($query, color);
  @include feature-targeting-mixins.targets($feat-color) {
    @include theme-mixins.prop(background-color, $color);
  }
}
@mixin shake-keyframes(
  $modifier, $positionY, $positionX: 0%, $scale: variables.$float-scale, $query: functions.all()) {
  $feat-animation: functions.create-target($query, animation);
  @include feature-targeting-mixins.targets($feat-animation) {
    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {
      0% {
        transform: translateX(calc(0 - #{$positionX})) translateY(-#{$positionY}) scale(#{$scale});
      }
      33% {
        animation-timing-function: cubic-bezier(.5, 0, .701732, .495819);
        transform: translateX(calc(4% - #{$positionX})) translateY(-#{$positionY}) scale(#{$scale});
      }
      66% {
        animation-timing-function: cubic-bezier(.302435, .381352, .55, .956352);
        transform: translateX(calc(-4% - #{$positionX})) translateY(-#{$positionY}) scale(#{$scale});
      }
      100% {
        transform: translateX(calc(0 - #{$positionX})) translateY(-#{$positionY}) scale(#{$scale});
      }
    }
  }
}
@mixin float-position($positionY, $positionX: 0%, $scale: variables.$float-scale, $query: functions.all()) {
  $feat-structure: functions.create-target($query, structure);
  .mdc-floating-label--float-above {
    @include feature-targeting-mixins.targets($feat-structure) {
      @if $positionX > 0 or $positionX < 0 {
        transform: translateY(-1 * $positionY) translateX(-1 * $positionX) scale($scale);
      } @else {
        transform: translateY(-1 * $positionY) scale($scale);
      }
    }
  }
}
@mixin shake-animation($modifier, $query: functions.all()) {
  $feat-animation: functions.create-target($query, animation);
  .mdc-floating-label--shake {
    @include feature-targeting-mixins.targets($feat-animation) {
      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;
    }
  }
}
@mixin max-width($max-width, $query: functions.all()) {
  $feat-structure: functions.create-target($query, structure);
  @include feature-targeting-mixins.targets($feat-structure) {
    max-width: $max-width;
  }
}
@mixin float-transition(
  $duration-ms,
  $timing-function: animation-variables.$standard-curve-timing-function,
  $query: functions.all()
) {
  $feat-animation: functions.create-target($query, animation);
  @include feature-targeting-mixins.targets($feat-animation) {
    transition:
      color $duration-ms $timing-function,
      transform $duration-ms $timing-function;
  }
}
