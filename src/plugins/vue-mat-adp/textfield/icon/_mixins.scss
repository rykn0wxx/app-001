@use "@material/rtl/mixins" as rtl-mixins;
@use "../../theme/mixins" as theme-mixins;
@use "../../feature-targeting/functions" as feature-targeting-functions;
@use "../../feature-targeting/mixins" as feature-targeting-mixins;
@use "./variables";
@mixin icon-core-styles($query: feature-targeting-functions.all()) {
  .mdc-text-field__icon {
    @include icon_($query: $query);
  }
  .mdc-text-field__icon--leading {
    @include leading-icon_($query: $query);
  }
  .mdc-text-field__icon--trailing {
    @include trailing-icon_($query: $query);
  }
}
@mixin leading-icon-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-text-field--disabled) {
    @include leading-icon-color_($color, $query);
  }
}
@mixin trailing-icon-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-text-field--disabled) {
    @include trailing-icon-color_($color, $query);
  }
}
@mixin disabled-icon-color($color, $query: feature-targeting-functions.all()) {
  &.mdc-text-field--disabled {
    @include leading-icon-color_($color, $query);
    @include trailing-icon-color_($color, $query);
  }
}
@mixin size($size, $query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  @include feature-targeting-mixins.targets($feat-structure) {
    .mdc-text-field__icon {
      font-size: $size;
    }
  }
}
@mixin icon_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-color: feature-targeting-functions.create-target($query, color);
  @include feature-targeting-mixins.targets($feat-structure) {
    align-self: center;
    cursor: pointer;
  }
  &:not([tabindex]),
  &[tabindex="-1"] {
    @include feature-targeting-mixins.targets($feat-color) {
      cursor: default;
      pointer-events: none;
    }
  }
}
@mixin leading-icon_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  @include feature-targeting-mixins.targets($feat-structure) {
    @include rtl-mixins.reflexive-property(margin, variables.$leading-icon-padding-left, variables.$leading-icon-padding-right);
  }
}
@mixin trailing-icon_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  @include feature-targeting-mixins.targets($feat-structure) {
    @include rtl-mixins.reflexive-property(margin, variables.$trailing-icon-padding-left, variables.$trailing-icon-padding-right);
  }
}
@mixin leading-icon-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-text-field__icon--leading {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $color);
    }
  }
}
@mixin trailing-icon-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-text-field__icon--trailing {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $color);
    }
  }
}
