@use "../feature-targeting/functions" as feature-targeting-functions;
@use "../feature-targeting/mixins" as feature-targeting-mixins;
@use "../theme/functions" as theme-functions;
@use "../theme/mixins" as theme-mixins;
@use "../theme/variables" as theme-variables;
@use "../typography/mixins" as typography-mixins;
@use "@material/rtl/mixins" as rtl-mixins;
@use "./variables";
@use "./keyframes";
@mixin core-styles($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-animation: feature-targeting-functions.create-target($query, animation);

  @include feature-targeting-mixins.targets($feat-animation) {
    @include keyframes.emphasize-keyframes_;
  }
  .mdc-slider {
    @include color-accessible(secondary, $query: $query);
    &--disabled {
      $disabled-color: #9a9a9a;
      @include highlight-color_($disabled-color, $query: $query);
      @include rail-color_($disabled-color, $query: $query);
      @include rail-tick-mark-color_($disabled-color, $query: $query);
      @include thumb-color_($disabled-color, $query: $query);
      @include thumb-stroke-cutout_(white, $query: $query);
      @include feature-targeting-mixins.targets($feat-structure) {
        cursor: auto;
      }
    }
    @include feature-targeting-mixins.targets($feat-structure) {
      position: relative;
      width: 100%;
      height: 48px;
      cursor: pointer;
      touch-action: pan-x;
      -webkit-tap-highlight-color: rgba(black, 0);
      &:focus {
        outline: none;
      }
    }
    @include track_($query: $query);
    @include track-marker_($query: $query);
    @include thumb_($query: $query);
    @include focus-ring_($query: $query);
    @include pin_($query: $query);
  }
  .mdc-slider--active {
    .mdc-slider__thumb {
      @include feature-targeting-mixins.targets($feat-structure) {
        transform: scale3d(1, 1, 1);
      }
    }
  }
  .mdc-slider--focus {
    .mdc-slider__thumb {
      @include feature-targeting-mixins.targets($feat-animation) {
        animation: mdc-slider-emphasize 266.67ms linear;
      }
    }
    .mdc-slider__focus-ring {
      @include feature-targeting-mixins.targets($feat-structure) {
        transform: scale3d(1.55, 1.55, 1.55);
        opacity: .25;
      }
    }
  }
  .mdc-slider--in-transit {
    .mdc-slider__thumb {
      @include feature-targeting-mixins.targets($feat-animation) {
        transition-delay: 140ms;
      }
    }
  }






  .mdc-slider--in-transit,


  .mdc-slider:focus:not(.mdc-slider--active) {
    .mdc-slider__thumb-container,
    .mdc-slider__track {
      @include feature-targeting-mixins.targets($feat-animation) {
        transition: transform 80ms ease;
      }
    }
  }
  .mdc-slider--discrete {

    &.mdc-slider--active {
      .mdc-slider__thumb {
        @include feature-targeting-mixins.targets($feat-structure) {
          transform: scale(calc(12 / 21));
        }
      }
      .mdc-slider__pin {
        @include feature-targeting-mixins.targets($feat-structure) {
          transform: rotate(-45deg) scale(1) translate(19px, -20px);
        }
      }
    }
    &.mdc-slider--focus {
      .mdc-slider__thumb {
        @include feature-targeting-mixins.targets($feat-animation) {
          animation: none;
        }
      }
    }
    &.mdc-slider--display-markers {
      .mdc-slider__track-marker-container {
        @include feature-targeting-mixins.targets($feat-structure) {
          visibility: visible;
        }
      }
    }

  }

}
@mixin highlight-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-slider--disabled) {
    @include highlight-color_($color, $query: $query);
  }
}
@mixin rail-color($color, $opacity: variables.$baseline-rail-opacity, $query: feature-targeting-functions.all()) {
  &:not(.mdc-slider--disabled) {
    @include rail-color_($color, $opacity, $query: $query);
  }
}
@mixin rail-tick-mark-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-slider--disabled) {
    @include rail-tick-mark-color_($color, $query: $query);
  }
}
@mixin thumb-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-slider--disabled) {
    @include thumb-color_($color, $query: $query);
  }
}
@mixin focus-halo-color($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  &:not(.mdc-slider--disabled) {
    .mdc-slider__focus-ring {
      @include feature-targeting-mixins.targets($feat-color) {
        @include theme-mixins.prop(background-color, $color);
      }
    }
  }
}
@mixin value-pin-ink-color($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  &:not(.mdc-slider--disabled) {
    .mdc-slider__pin {
      @include feature-targeting-mixins.targets($feat-color) {
        @include theme-mixins.prop(color, $color);
      }
    }
  }
}
@mixin value-pin-fill-color($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  &:not(.mdc-slider--disabled) {
    .mdc-slider__pin {
      @include feature-targeting-mixins.targets($feat-color) {
        @include theme-mixins.prop(background-color, $color);
      }
    }
  }
}
@mixin value-pin-fill-color-accessible($color, $query: feature-targeting-functions.all()) {
  $color-value: theme-variables.prop-value($color);
  $ink-color: if(theme-functions.tone($color-value) == "light", text-primary-on-light, text-primary-on-dark);
  @include value-pin-fill-color($color, $query: $query);
  @include value-pin-ink-color($ink-color, $query: $query);
}
@mixin color-accessible($color, $query: feature-targeting-functions.all()) {
  @include highlight-color($color, $query: $query);
  @include rail-color($color, $query: $query);
  @include rail-tick-mark-color($color, $query: $query);
  @include thumb-color($color, $query: $query);
  @include focus-halo-color($color, $query: $query);
  @include value-pin-fill-color-accessible($color, $query: $query);
}
@mixin track_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-animation: feature-targeting-functions.create-target($query, animation);
  &__track-container {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      top: 50%;
      width: 100%;
      height: 2px;
      overflow: hidden;
    }
    &::after {
      @include feature-targeting-mixins.targets($feat-structure) {
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        width: 100%;
        height: 100%;
        content: "";
      }
    }
  }
  &__track {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      width: 100%;
      height: 100%;
      transform-origin: left top;
      @include rtl-mixins.rtl(".mdc-slider") {
        transform-origin: right top;
      }
    }
    @include feature-targeting-mixins.targets($feat-animation) {
      will-change: transform;
    }
  }
}
@mixin track-marker_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);

  &__track-marker-container {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: flex;
      margin-right: 0;
      margin-left: -1px;
      visibility: hidden;
      @include rtl-mixins.rtl(".mdc-slider") {
        margin-right: -1px;
        margin-left: 0;
      }


      &::after {
        display: block;
        width: 2px;
        height: 2px;
        content: "";
      }
    }
  }
  &__track-marker {
    @include feature-targeting-mixins.targets($feat-structure) {
      flex: 1;

      &::after {
        display: block;
        width: 2px;
        height: 2px;
        content: "";
      }

      &:first-child::after {
        width: 3px;
      }
    }
  }
}
@mixin thumb_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-animation: feature-targeting-functions.create-target($query, animation);
  &__thumb-container {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      top: 15px;
      left: 0;
      width: 21px;


      height: 100%;
      user-select: none;
    }
    @include feature-targeting-mixins.targets($feat-animation) {
      will-change: transform;
    }
  }
  &__thumb {
    @include feature-targeting-mixins.targets($feat-structure) {
      position: absolute;
      top: 0;
      left: 0;
      transform: scale(.571);
      stroke-width: 3.5;
    }
    @include feature-targeting-mixins.targets($feat-animation) {
      transition: transform 100ms ease-out, fill 100ms ease-out, stroke 100ms ease-out;
    }
  }
}
@mixin focus-ring_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-animation: feature-targeting-functions.create-target($query, animation);
  &__focus-ring {
    @include feature-targeting-mixins.targets($feat-structure) {
      width: 21px;
      height: 21px;
      border-radius: 50%;
      opacity: 0;
    }
    @include feature-targeting-mixins.targets($feat-animation) {
      transition: transform 266.67ms ease-out, opacity 266.67ms ease-out, background-color 266.67ms ease-out;
    }
  }
}
@mixin pin_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-animation: feature-targeting-functions.create-target($query, animation);
  &__pin {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      align-items: center;
      justify-content: center;
      width: 26px;
      height: 26px;
      margin-top: -2px;
      margin-left: -2px;
      transform: rotate(-45deg) scale(0) translate(0, 0);
      border-radius: 50% 50% 50% 0%;


      z-index: 1;
    }
    @include feature-targeting-mixins.targets($feat-animation) {
      transition: transform 100ms ease-out;
    }
  }
  &__pin-value-marker {
    @include typography-mixins.typography(body2, $query: $query);
    @include feature-targeting-mixins.targets($feat-structure) {
      transform: rotate(45deg);
    }
  }
}
@mixin highlight-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-slider__track {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(background-color, $color);
    }
  }
}
@mixin rail-color_($color, $opacity: variables.$baseline-rail-opacity, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-slider__track-container::after {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(background-color, $color);
      opacity: $opacity;
    }
  }
}
@mixin rail-tick-mark-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-slider__track-marker-container {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(background-color, $color);
    }
  }
}
@mixin thumb-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-slider__thumb {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(fill, $color);
      @include theme-mixins.prop(stroke, $color);
    }
  }
}
@mixin thumb-stroke-cutout_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-slider__thumb {
    @include feature-targeting-mixins.targets($feat-color) {
      stroke: $color;

      stroke: var(--mdc-slider-bg-color-behind-component, $color);
    }
  }
}
