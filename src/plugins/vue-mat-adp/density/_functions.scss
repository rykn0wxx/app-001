@use "sass:list";
@use "sass:map";
@use "sass:meta";
@use "./variables";

@function prop-value($density-config, $density-scale, $property-name) {
  @if (meta.type-of($density-scale) == "string" and
  list.index($list: variables.$supported-scales, $value: $density-scale) == null) {
    @error "mdc-density: Supported density scales #{variables.$supported-scales}, but received #{$density-scale}.";
  }

  @if (list.index($list: variables.$supported-properties, $value: $property-name) == null) {
    @error "mdc-density: Supported density properties #{variables.$supported-properties}," +
      "but received #{$property-name}.";
  }

  $value: null;
  $property-scale-map: map.get($density-config, $property-name);

  @if map.has-key($property-scale-map, $density-scale) {
    $value: map.get($property-scale-map, $density-scale);
  } @else {
    $value: map.get($property-scale-map, default) + $density-scale * variables.$interval;
  }

  $min-value: map.get($property-scale-map, variables.$minimum-scale);
  $max-value: map.get($property-scale-map, variables.$maximum-scale);

  @if ($value < $min-value or $value > $max-value) {
    @error "mdc-density: #{$property-name} must be between #{$min-value} and " +
      "#{$max-value} (inclusive), but received #{$value}.";
  }

  @return $value;
}
