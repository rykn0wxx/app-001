@use "../../feature-targeting/functions" as feature-targeting-functions;
@use "../../feature-targeting/mixins" as feature-targeting-mixins;
@use "../../theme/mixins" as theme-mixins;
@use "@material/rtl/mixins" as rtl-mixins;
@use "./variables";
@mixin icon-core-styles($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  .mdc-select--with-leading-icon {
    @include icon_($query: $query);
    @include icon-horizontal-margins_(
      $left: variables.$icon-horizontal-margin,
      $right: variables.$icon-horizontal-margin,
      $query: $query);
    @include icon-color(on-surface, $query: $query);
  }
  .mdc-select__icon:not([tabindex]),
  .mdc-select__icon[tabindex="-1"] {
    @include feature-targeting-mixins.targets($feat-structure) {
      cursor: default;
      pointer-events: none;
    }
  }
}
@mixin icon-color($color, $query: feature-targeting-functions.all()) {
  &:not(.mdc-select--disabled) {
    @include icon-color_($color, $query: $query);
  }
}
@mixin icon_($query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-select__icon {
    @include feature-targeting-mixins.targets($feat-structure) {
      display: inline-block;
      box-sizing: border-box;
      width: variables.$icon-size;
      height: variables.$icon-size;
      border: none;
      opacity: variables.$icon-opacity;
      text-decoration: none;
      cursor: pointer;
      user-select: none;
      flex-shrink: 0;
      align-self: center;
    }
    @include feature-targeting-mixins.targets($feat-color) {
      background-color: transparent;
      fill: currentColor;
    }
  }
}
@mixin icon-color_($color, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);
  .mdc-select__icon {
    @include feature-targeting-mixins.targets($feat-color) {
      @include theme-mixins.prop(color, $color);
    }
  }
}
@mixin icon-horizontal-margins_($left, $right, $query: feature-targeting-functions.all()) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);
  .mdc-select__icon {
    @include feature-targeting-mixins.targets($feat-structure) {
      @include rtl-mixins.reflexive-property(
        margin,
        $left,
        $right
      );
    }
  }
}
